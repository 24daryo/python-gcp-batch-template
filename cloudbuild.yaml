# https://cloud.google.com/build/docs/configuring-builds/substitute-variable-values?hl=ja
steps:
# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/${_CRJ_SERVICE_NAME}:$COMMIT_SHA', '.']
# Push the container image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/${_CRJ_SERVICE_NAME}:$COMMIT_SHA']
# Delete existing Cloud Run job
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args: [
    'beta', 'run', 'jobs', 'delete', '${_CRJ_SERVICE_NAME}', '--region', '${_CRJ_REGION}', '--quiet' # --quite: エラーや警告などの詳細なメッセージを非表示表示
  ]
# Deploy container image to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args: [
    'beta', 'run', 'jobs', 'create', '${_CRJ_SERVICE_NAME}', 
    '--image', 'gcr.io/$PROJECT_ID/${_CRJ_SERVICE_NAME}:$COMMIT_SHA', 
    '--set-cloudsql-instances','${_CLOUD_SQL_INSTANCE}',
    '--tasks', '${_CRJ_TASKS}',
    '--max-retries', '${_CRJ_MAX_RETRIES}',
    '--task-timeout', '${_CRJ_TASK_TIMEOUT}',
    '--parallelism', '${_CRJ_PARALLELISM}',
    '--cpu', '${_CRJ_CPU}',
    '--memory', '${_CRJ_MEMORY}',
    '--region', '${_CRJ_REGION}',
    '--set-env-vars', 'CLOUD_SQL_USER=${_CLOUD_SQL_USER}',
    '--set-env-vars', 'CLOUD_SQL_PASSWORD=${_CLOUD_SQL_PASSWORD}',
    '--set-env-vars', 'CLOUD_SQL_NAME=${_CLOUD_SQL_NAME}',
    '--set-env-vars', 'CLOUD_SQL_INSTANCE=${_CLOUD_SQL_INSTANCE}',
    '--set-env-vars', 'LINE_NOTIFY_TOKEN=${_LINE_NOTIFY_TOKEN}',
  ]
# Get Service URL
# - name: 'gcr.io/cloud-builders/gcloud'
#   id: get_service_url
#   entrypoint: 'bash'
#   args:
#   - '-c'
#   - |
#     SERVICE_URL=$(gcloud beta run jobs describe ${_CRJ_SERVICE_NAME} --region=${_CRJ_REGION} --format='value(status.address.url)')
#     echo "##vars"
#     echo "SERVICE_URL: $SERVICE_URL"
# Create or Update Job https://cloud.google.com/run/docs/execute/jobs-on-schedule?hl=ja
- name: 'gcr.io/cloud-builders/gcloud'
  id: create_or_update_job
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gcloud beta scheduler jobs $(
      if gcloud beta scheduler jobs describe "$_CS_JOB_NAME" --location="$_CS_LOCATION" --format='value(schedule)' > /dev/null;
      then echo update
      else echo create http
    ) "$_CS_JOB_NAME" \
      --schedule="$_CS_SCHEDULE" \
      --uri="https://${_CRJ_REGION}-run.googleapis.com/apis/run.googleapis.com/v1/namespaces/$PROJECT_ID/jobs/${_CS_JOB_NAME}:run" \
      --http-method="$_CS_HTTP_METHOD" \
      --location="$_CS_LOCATION" \
      --oidc-service-account-email="$_CS_OIDC_SERVICE_ACCOUNT_EMAIL"
images:
- 'gcr.io/$PROJECT_ID/${_CRJ_SERVICE_NAME}:$COMMIT_SHA'